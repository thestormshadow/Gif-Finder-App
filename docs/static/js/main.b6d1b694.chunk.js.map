{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","Giffinder.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","busq","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","i","key","Giffinder","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAEPC,mBAAS,IAFF,mBAEnCC,EAFmC,KAExBC,EAFwB,KAiB1C,OACI,oCACI,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAY,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACnCN,EAAc,OAQV,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBxB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCRlBG,EAAO,uCAAG,WAAMC,GAAN,yBAAAC,EAAA,4DACJ,4CACTC,EAAOC,UAAUH,GACjBI,EAAM,0CAA4CF,EAA5C,oDAHO,SAIAG,MAAMD,GAJN,cAIbE,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACHC,MAAMF,EAAIE,MACVT,IAAG,UAACO,EAAIG,cAAL,aAAC,EAAYC,iBAAiBX,QAV1B,kBAcZK,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAE/B,OACI,yBAAKa,UAAU,2CACX,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC9BsB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAiBtC,OAVAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGrB,CAACrB,IAEGsB,EDfuBK,CAAa3B,GAA/Bc,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAEnB,OACI,oCACA,wBAAIJ,UAAU,2CAAd,IAA0DjB,EAA1D,KAECqB,GAAW,uBAAGJ,UAAU,yCAAb,eAER,yBAAKA,UAAU,aACLH,EAAOJ,KAAI,SAACC,EAAIiB,GAAL,OAAS,kBAAC,EAAD,eAAaC,IAAKlB,EAAIC,IAAQD,UEZ3DmB,EAAY,WAAO,IAAD,EAEO5C,mBAAS,IAFhB,mBAEpB6C,EAFoB,KAER9C,EAFQ,KAI3B,OACI,oCACI,8CACA,6BAEA,kBAAC,EAAD,CAAaA,YAAaA,IAE1B,4BAEQ8C,EAAWrB,KAAI,SAACV,EAAS4B,GAAV,OAAe,kBAAC,EAAD,CAASC,IAAK7B,EAAUA,SAAUA,UCXpFgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.b6d1b694.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport propTypes from 'prop-types'\r\n    \r\nexport const AddCategory = ({setCategory}) => {\r\n    \r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategory(cats =>[inputValue, ...cats,]);\r\n            setInputValue(\"\");\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={inputValue} onChange={handleInputChange}></input>\r\n            </form>\r\n        </>\r\n    )\r\n        \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: propTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const apiKey = \"&api_key=XsDGhh7zOkXIL5O3HB9HWpD6RyDmqb6m\";\r\n    const busq = encodeURI(category);\r\n    const url = \"https://api.giphy.com/v1/gifs/search?q=\" + busq + \"&limit=3\" + apiKey;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <> \r\n        <h3 className=\"card animate__animated animate__flipInX\"> {category} </h3>\r\n\r\n        {loading && <p className=\"card animate__animated animate__flash\">Cargando...</p>}\r\n        {\r\n            <div className=\"card-grid\"> \r\n                    { images.map((img,i)=><GifGridItem key={img.id} {...img}/>) }            \r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\n","\r\nimport {useState, useEffect} from 'react'\r\nimport  {getGifs} from '../Helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n   \r\n    const [state,setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory'\r\nimport { GifGrid } from './Components/GifGrid'\r\nexport const Giffinder = () => {\r\n    \r\n    const [categories, setCategory] = useState([]);\r\n\r\n    return(\r\n        <>\r\n            <h2>Gif Finder App</h2>\r\n            <hr/>\r\n\r\n            <AddCategory setCategory={setCategory} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category,i)=> <GifGrid key={category} category={category}/>)\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Giffinder} from './Giffinder';\n\nReactDOM.render(\n    <Giffinder />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}